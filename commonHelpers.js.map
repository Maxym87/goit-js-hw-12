{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport axios from 'axios';\n\nconst KEY = '42680318-96c21e5764acdc13d94b87bb9';\nconst URL = 'https://pixabay.com/api/';\nconst container = document.querySelector('.container');\n\nexport function getImages(QUERY) {\n  container.style.display = 'block';\n  const link = `${URL}?key=${KEY}&q=${QUERY}&image_type=photo&orientation=horizontal&savesearch=true`;\n\n  return fetch(link)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`Response error ${response.status}`);\n      }\n      return response.json();\n    })\n    .then(data => {\n      if (data.hits.length === 0) {\n        iziToast.error({\n          iconUrl: cross,\n          timeout: 3000,\n          position: 'topRight',\n          messageColor: '#FFF',\n          backgroundColor: '#FF544B',\n          message:\n            'Sorry, there are no images matching your search query. Please try again!',\n        });\n      }\n      return data;\n    })\n    .catch(error => console.log(`Error: ${error}`));\n}","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nexport function createMarkup(images) {\n  return images.hits\n    .map(\n      ({\n        largeImageURL,\n        webformatURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) =>\n        `<li class=\"gallery-item\">\n              <a class=\"gallery-link\" href=\"${largeImageURL}\">\n                <img \n                  class=\"gallery-image\" \n                  src=\"${webformatURL}\" \n                  alt=\"${tags}\" \n                  width=\"360px\" \n                  height=\"200px\"\n                />\n              </a>\n              <div class=\"gallery-info\">\n                <p class=\"gallery-info-par\">\n                  <span class=\"gallery-info-span\">Likes: <span class=\"tag-span\">${likes}</span></span>    \n                </p>\n                <p class=\"gallery-info-par\">\n                  <span class=\"gallery-info-span\">Views: <span class=\"tag-span\">${views}</span></span>    \n                </p>\n                <p class=\"gallery-info-par\">\n                  <span class=\"gallery-info-span\">Comments: <span class=\"tag-span\">${comments}</span></span>    \n                </p>\n                <p class=\"gallery-info-par\">\n                  <span class=\"gallery-info-span\">Downloads: <span class=\"tag-span\">${downloads}</span></span>    \n                </p>\n              </div>\n            </li>`\n    )\n    .join('');\n}\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nimport { getImages } from './js/pixabay-api';\nimport { createMarkup } from './js/render-functions';\n\nconst lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\nconst form = document.querySelector('.form');\nconst input = document.querySelector('.input');\nconst container = document.querySelector('.container');\nconst gallery = document.querySelector('.gallery');\n\ncontainer.style.display = 'none';\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  container.style.display = 'block';\n  gallery.innerHTML = '';\n  const userInput = input.value.trim();\n  if (userInput === '') {\n    iziToast.show({\n      iconUrl: cross,\n      color: '#EF4040',\n      messageColor: '#FFF',\n      message:\n        'Sorry, there are no images matching your search query. Please, try again!',\n    });\n    container.style.display = 'none';\n    return;\n  }\n\n  getImages(userInput)\n    .then(images => {\n      gallery.innerHTML = createMarkup(images);\n      lightbox.refresh();\n      form.reset();\n    })\n    .catch(error => console.log('Error:', error));\n});\n"],"names":["KEY","URL","container","getImages","QUERY","link","response","data","iziToast","error","createMarkup","images","largeImageURL","webformatURL","tags","likes","views","comments","downloads","lightbox","SimpleLightbox","form","input","gallery","event","userInput"],"mappings":"6vBAIA,MAAMA,EAAM,qCACNC,EAAM,2BACNC,EAAY,SAAS,cAAc,YAAY,EAE9C,SAASC,EAAUC,EAAO,CAC/BF,EAAU,MAAM,QAAU,QAC1B,MAAMG,EAAO,GAAGJ,CAAG,QAAQD,CAAG,MAAMI,CAAK,2DAEzC,OAAO,MAAMC,CAAI,EACd,KAAKC,GAAY,CAChB,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAM,kBAAkBA,EAAS,MAAM,EAAE,EAErD,OAAOA,EAAS,MACtB,CAAK,EACA,KAAKC,IACAA,EAAK,KAAK,SAAW,GACvBC,EAAS,MAAM,CACb,QAAS,MACT,QAAS,IACT,SAAU,WACV,aAAc,OACd,gBAAiB,UACjB,QACE,0EACZ,CAAS,EAEID,EACR,EACA,MAAME,GAAS,QAAQ,IAAI,UAAUA,CAAK,EAAE,CAAC,CAClD,CC/BO,SAASC,EAAaC,EAAQ,CACnC,OAAOA,EAAO,KACX,IACC,CAAC,CACC,cAAAC,EACA,aAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACD,IACC;AAAA,8CACsCN,CAAa;AAAA;AAAA;AAAA,yBAGlCC,CAAY;AAAA,yBACZC,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kFAOqDC,CAAK;AAAA;AAAA;AAAA,kFAGLC,CAAK;AAAA;AAAA;AAAA,qFAGFC,CAAQ;AAAA;AAAA;AAAA,sFAGPC,CAAS;AAAA;AAAA;AAAA,kBAI1F,EACA,KAAK,EAAE,CACZ,CClCA,MAAMC,EAAW,IAAIC,EAAe,aAAc,CAChD,aAAc,MACd,aAAc,GAChB,CAAC,EAEKC,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAQ,SAAS,cAAc,QAAQ,EACvCpB,EAAY,SAAS,cAAc,YAAY,EAC/CqB,EAAU,SAAS,cAAc,UAAU,EAEjDrB,EAAU,MAAM,QAAU,OAE1BmB,EAAK,iBAAiB,SAAUG,GAAS,CACvCA,EAAM,eAAc,EACpBtB,EAAU,MAAM,QAAU,QAC1BqB,EAAQ,UAAY,GACpB,MAAME,EAAYH,EAAM,MAAM,KAAI,EAClC,GAAIG,IAAc,GAAI,CACpBjB,EAAS,KAAK,CACZ,QAAS,MACT,MAAO,UACP,aAAc,OACd,QACE,2EACR,CAAK,EACDN,EAAU,MAAM,QAAU,OAC1B,MACD,CAEDC,EAAUsB,CAAS,EAChB,KAAKd,GAAU,CACdY,EAAQ,UAAYb,EAAaC,CAAM,EACvCQ,EAAS,QAAO,EAChBE,EAAK,MAAK,CAChB,CAAK,EACA,MAAMZ,GAAS,QAAQ,IAAI,SAAUA,CAAK,CAAC,CAChD,CAAC"}